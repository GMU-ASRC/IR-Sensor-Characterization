import serial
import math
import argparse
import csv

# --- CONFIG ---
# PORT example: "COM14"
BAUD = 38400
SERIAL_TIMEOUT = 0.01  # seconds

# Mapping from sensor position (1â€“15,0) to angle
mapping = {
    1: 11.25,
    2: 33.75,
    3: 56.25,
    4: 78.75,
    5: 101.25,
    6: 123.75,
    7: 146.25,
    8: 168.75,
    9: 191.25,
    10: 213.75,
    11: 236.25,
    12: 258.75,
    13: 281.25,
    14: 303.75,
    15: 326.25,
    0: 348.75,
}


def parse_serial(line, allowed_tokens):
    """Return list of (token, position_index) for any allowed token."""
    parts = line.strip("[]\r\n ").split(",")
    out = []
    for idx, p in enumerate(parts):
        tok = p.strip()
        if len(tok) >= 3 and tok[:3] in allowed_tokens:
            out.append((tok[:3], idx + 1))
    return out


def to_csv(data):
    """
    Append sensor IDs and positions (as angles) to CSV.
    """
    with open("data.csv", "a", newline="") as csvfile:
        writer = csv.writer(csvfile)
        for token, pos in data:
            writer.writerow([token, pos])


def main(sensor_id, port):
    # Initialize CSV with header once
    try:
        with open("data.csv", "w", newline="") as csvfile:
            writer = csv.writer(csvfile)
            writer.writerow(["ID", "Angle"])
    except Exception as e:
        print("CSV initialization error:", e)

    # Connect to serial port
    try:
        ser = serial.Serial(port, BAUD, timeout=SERIAL_TIMEOUT)
        print(f"Serial connected on {port} at {BAUD} baud")
    except Exception as e:
        print("Serial error:", e)
        return

    allowed_tokens = {
        f"{sensor_id}A",
        f"{sensor_id}B",
        f"{sensor_id}C",
        f"{sensor_id}D",
    }

    # Main loop: read, parse, log
    while True:
        raw = ser.readline().decode("utf-8", errors="ignore")
        line = raw.strip()

        if line:
            data = parse_serial(line, allowed_tokens)
            if data:
                angles = [mapping.get(pos) for _, pos in data if pos in mapping]
                print("Angle array:", angles)
                to_csv(data)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog="IR Sensors (no-plot)",
        description="Parses IR sensor data and logs to CSV as fast as possible",
    )
    parser.add_argument(
        "-i", "--id", required=True, help="ID of IR sensor to read (e.g., '23')"
    )
    parser.add_argument(
        "-p", "--port", required=True, help="Serial port for IR sensor (e.g., 'COM14')"
    )
    args = parser.parse_args()
    main(args.id, args.port)
